{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n\n  console.log('url', url);\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      });\n      console.log('res,res').then(res => {\n        if (!res.ok) {\n          // error coming back from server\n          throw Error('could not fetch the data for that resource');\n        }\n\n        return res.json();\n      }).then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      }).catch(err => {\n        if (err.name === 'Aborterror') {\n          console.log(\"fetch aborted\");\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n      });\n    }, 500);\n    return () => abortCont.abort(); //cleanUp\n  }, [url]); //url dependencies\n\n  console.log(111, data);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","console","log","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","message","abort"],"sources":["C:/Users/hp/Documents/ReactTraining/student_app/src/usefetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  console.log('url',url);\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n\r\n    const abortCont = new AbortController();\r\n\r\n    setTimeout(() => {\r\n      fetch(url, {signal:abortCont.signal})\r\n      console.log('res,res')\r\n      .then(res => {\r\n        if (!res.ok) { // error coming back from server\r\n          throw Error('could not fetch the data for that resource');\r\n        } \r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setIsPending(false);\r\n        setData(data);\r\n        setError(null);\r\n      })\r\n      .catch(err => {\r\n        if(err.name === 'Aborterror'){\r\n          console.log(\"fetch aborted\")\r\n        }else{\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n      })\r\n    }, 500);\r\n\r\n    return () => abortCont.abort(); //cleanUp\r\n  }, [url]) //url dependencies\r\n\r\n  console.log(111,data);\r\n  return { data, isPending, error };\r\n}\r\n \r\nexport default useFetch;"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;EAAA;;EACxBC,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBF,GAAlB;EACA,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IAEd,MAAMW,SAAS,GAAG,IAAIC,eAAJ,EAAlB;IAEAC,UAAU,CAAC,MAAM;MACfC,KAAK,CAACZ,GAAD,EAAM;QAACa,MAAM,EAACJ,SAAS,CAACI;MAAlB,CAAN,CAAL;MACAZ,OAAO,CAACC,GAAR,CAAY,SAAZ,EACCY,IADD,CACMC,GAAG,IAAI;QACX,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;UAAE;UACb,MAAMC,KAAK,CAAC,4CAAD,CAAX;QACD;;QACD,OAAOF,GAAG,CAACG,IAAJ,EAAP;MACD,CAND,EAOCJ,IAPD,CAOMX,IAAI,IAAI;QACZG,YAAY,CAAC,KAAD,CAAZ;QACAF,OAAO,CAACD,IAAD,CAAP;QACAK,QAAQ,CAAC,IAAD,CAAR;MACD,CAXD,EAYCW,KAZD,CAYOC,GAAG,IAAI;QACZ,IAAGA,GAAG,CAACC,IAAJ,KAAa,YAAhB,EAA6B;UAC3BpB,OAAO,CAACC,GAAR,CAAY,eAAZ;QACD,CAFD,MAEK;UACHI,YAAY,CAAC,KAAD,CAAZ;UACAE,QAAQ,CAACY,GAAG,CAACE,OAAL,CAAR;QACD;MACF,CAnBD;IAoBD,CAtBS,EAsBP,GAtBO,CAAV;IAwBA,OAAO,MAAMb,SAAS,CAACc,KAAV,EAAb,CA5Bc,CA4BkB;EACjC,CA7BQ,EA6BN,CAACvB,GAAD,CA7BM,CAAT,CANwB,CAmCd;;EAEVC,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBC,IAAhB;EACA,OAAO;IAAEA,IAAF;IAAQE,SAAR;IAAmBE;EAAnB,CAAP;AACD,CAvCD;;GAAMR,Q;;AAyCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}